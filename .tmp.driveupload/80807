{"ast":null,"code":"var _jsxFileName = \"D:\\\\nmit original\\\\gesture-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport WebcamFeed from './WebcamFeed'; // Import the WebcamFeed component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedCase, setSelectedCase] = useState(null);\n  const [gestureResult, setGestureResult] = useState('');\n  const websocketRef = useRef(null);\n\n  // Function to handle case selection\n  const handleCaseSelect = caseNumber => {\n    console.log(`Case selected: ${caseNumber}`); // Added logging\n    setSelectedCase(caseNumber);\n    setGestureResult(''); // Clear previous result when case changes\n    // Send the selected case to the backend immediately if WebSocket is open\n    if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\n      console.log(`WebSocket open, sending case ${caseNumber}`); // Added logging\n      websocketRef.current.send(JSON.stringify({\n        case: caseNumber\n      }));\n    } else {\n      console.log(`WebSocket not open, cannot send case ${caseNumber} immediately.`); // Added logging\n    }\n  };\n\n  // Effect to manage WebSocket connection\n  useEffect(() => {\n    console.log('Attempting to connect WebSocket...'); // Added logging\n    // Replace with your backend WebSocket URL\n    const wsUrl = 'ws://localhost:5000/gesture_stream';\n    const ws = new WebSocket(wsUrl);\n    ws.onopen = () => {\n      console.log('WebSocket connection opened');\n      websocketRef.current = ws;\n      // Optionally send the initial selected case upon connection\n      if (selectedCase !== null) {\n        console.log(`WebSocket opened, sending initial selected case ${selectedCase}`); // Added logging\n        ws.send(JSON.stringify({\n          case: selectedCase\n        }));\n      }\n    };\n    ws.onmessage = event => {\n      // Assuming the backend sends gesture results as text\n      console.log(\"Received message:\", event.data); // Log received message\n      setGestureResult(event.data);\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n      setGestureResult('WebSocket Error');\n    };\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n      websocketRef.current = null;\n      setGestureResult('WebSocket Closed'); // Indicate connection closed\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      console.log('Cleaning up WebSocket connection...'); // Added logging\n      if (websocketRef.current) {\n        websocketRef.current.close();\n      }\n    };\n  }, []); // Empty dependency array means this effect runs only once on mount\n\n  console.log('App rendering with selectedCase:', selectedCase, 'and websocketRef.current:', websocketRef.current); // Added logging\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hand Gesture Recognition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: /*#__PURE__*/_jsxDEV(WebcamFeed, {\n          websocket: websocketRef.current,\n          selectedCase: selectedCase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Gesture Case\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCaseSelect(1),\n            disabled: selectedCase === 1,\n            children: \"Case 1 (Photo Capture)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCaseSelect(2),\n            disabled: selectedCase === 2,\n            children: \"Case 2 (YouTube Control)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCaseSelect(3),\n            disabled: selectedCase === 3,\n            children: \"Case 3 (PowerPoint Control)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Gesture Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: gestureResult || 'Awaiting gesture...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MerjJw7+6uj65WQ/S1QZEgWqdpE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","WebcamFeed","jsxDEV","_jsxDEV","App","_s","selectedCase","setSelectedCase","gestureResult","setGestureResult","websocketRef","handleCaseSelect","caseNumber","console","log","current","readyState","WebSocket","OPEN","send","JSON","stringify","case","wsUrl","ws","onopen","onmessage","event","data","onerror","error","onclose","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","websocket","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/nmit original/gesture-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport WebcamFeed from './WebcamFeed'; // Import the WebcamFeed component\n\nfunction App() {\n  const [selectedCase, setSelectedCase] = useState(null);\n  const [gestureResult, setGestureResult] = useState('');\n  const websocketRef = useRef(null);\n\n  // Function to handle case selection\n  const handleCaseSelect = (caseNumber) => {\n    console.log(`Case selected: ${caseNumber}`); // Added logging\n    setSelectedCase(caseNumber);\n    setGestureResult(''); // Clear previous result when case changes\n    // Send the selected case to the backend immediately if WebSocket is open\n    if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\n      console.log(`WebSocket open, sending case ${caseNumber}`); // Added logging\n      websocketRef.current.send(JSON.stringify({ case: caseNumber }));\n    } else {\n      console.log(`WebSocket not open, cannot send case ${caseNumber} immediately.`); // Added logging\n    }\n  };\n\n  // Effect to manage WebSocket connection\n  useEffect(() => {\n    console.log('Attempting to connect WebSocket...'); // Added logging\n    // Replace with your backend WebSocket URL\n    const wsUrl = 'ws://localhost:5000/gesture_stream';\n    const ws = new WebSocket(wsUrl);\n\n    ws.onopen = () => {\n      console.log('WebSocket connection opened');\n      websocketRef.current = ws;\n      // Optionally send the initial selected case upon connection\n      if (selectedCase !== null) {\n         console.log(`WebSocket opened, sending initial selected case ${selectedCase}`); // Added logging\n         ws.send(JSON.stringify({ case: selectedCase }));\n      }\n    };\n\n    ws.onmessage = (event) => {\n      // Assuming the backend sends gesture results as text\n      console.log(\"Received message:\", event.data); // Log received message\n      setGestureResult(event.data);\n    };\n\n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n      setGestureResult('WebSocket Error');\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n      websocketRef.current = null;\n      setGestureResult('WebSocket Closed'); // Indicate connection closed\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      console.log('Cleaning up WebSocket connection...'); // Added logging\n      if (websocketRef.current) {\n        websocketRef.current.close();\n      }\n    };\n  }, []); // Empty dependency array means this effect runs only once on mount\n\n  console.log('App rendering with selectedCase:', selectedCase, 'and websocketRef.current:', websocketRef.current); // Added logging\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Hand Gesture Recognition</h1>\n      </header>\n      <main>\n        <div className=\"video-container\">\n          {/* Render the WebcamFeed component */}\n          <WebcamFeed websocket={websocketRef.current} selectedCase={selectedCase} />\n        </div>\n\n        <div className=\"controls\">\n          <h2>Select Gesture Case</h2>\n           <div>\n             <button onClick={() => handleCaseSelect(1)} disabled={selectedCase === 1}>Case 1 (Photo Capture)</button>\n             <button onClick={() => handleCaseSelect(2)} disabled={selectedCase === 2}>Case 2 (YouTube Control)</button>\n             <button onClick={() => handleCaseSelect(3)} disabled={selectedCase === 3}>Case 3 (PowerPoint Control)</button>\n           </div>\n        </div>\n\n        <div className=\"results\">\n          <h2>Gesture Result</h2>\n          <p>{gestureResult || 'Awaiting gesture...'}</p>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}