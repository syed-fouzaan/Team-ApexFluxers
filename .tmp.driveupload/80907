{"ast":null,"code":"var _jsxFileName = \"D:\\\\nmit original\\\\gesture-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport WebcamFeed from './WebcamFeed'; // Import the WebcamFeed component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedCase, setSelectedCase] = useState(null);\n  const [gestureResult, setGestureResult] = useState('');\n  const websocketRef = useRef(null);\n\n  // Function to handle case selection\n  const handleCaseSelect = caseNumber => {\n    console.log(`Case selected: ${caseNumber}`);\n    setSelectedCase(caseNumber);\n    setGestureResult(''); // Clear previous result when case changes\n    // The sending logic will now be handled by the useEffect below\n  };\n\n  // Effect to manage WebSocket connection (runs once on mount)\n  useEffect(() => {\n    console.log('Attempting to connect WebSocket...');\n    // Replace with your backend WebSocket URL\n    const wsUrl = 'ws://localhost:5000/gesture_stream';\n    const ws = new WebSocket(wsUrl);\n    ws.onopen = () => {\n      console.log('WebSocket connection opened');\n      websocketRef.current = ws;\n      // Now that the WebSocket is open, if a case was already selected, send it.\n      // This handles the case where a button was clicked before the connection opened.\n      if (selectedCase !== null) {\n        console.log(`WebSocket opened, sending initial selected case ${selectedCase}`);\n        ws.send(JSON.stringify({\n          case: selectedCase\n        }));\n      }\n    };\n    ws.onmessage = event => {\n      console.log(\"Received message:\", event.data);\n      // Assuming the backend sends JSON with a 'frame' and potentially 'gesture'\n      try {\n        const data = JSON.parse(event.data);\n        // The WebcamFeed component handles the frame.\n        // We only update gestureResult if the backend sends a specific gesture message.\n        if (data.gesture) {\n          setGestureResult(data.gesture);\n        } else if (typeof data === 'string') {\n          // Fallback for simple string messages\n          setGestureResult(data);\n        }\n      } catch (e) {\n        console.error(\"Failed to parse WebSocket message:\", e);\n        // Handle non-JSON messages or errors\n        setGestureResult(`Received: ${event.data}`);\n      }\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n      setGestureResult('WebSocket Error');\n    };\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n      websocketRef.current = null;\n      setGestureResult('WebSocket Closed');\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      console.log('Cleaning up WebSocket connection...');\n      if (websocketRef.current) {\n        websocketRef.current.close();\n      }\n    };\n  }, []); // Empty dependency array: runs only on mount and unmount\n\n  // Effect to send selectedCase when it changes AND WebSocket is open\n  useEffect(() => {\n    console.log('selectedCase or websocketRef.current changed.');\n    if (selectedCase !== null && websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\n      console.log(`Sending selected case ${selectedCase} via WebSocket.`);\n      websocketRef.current.send(JSON.stringify({\n        case: selectedCase\n      }));\n    } else {\n      var _websocketRef$current;\n      console.log('Conditions not met to send case:', {\n        selectedCase,\n        websocketReadyState: (_websocketRef$current = websocketRef.current) === null || _websocketRef$current === void 0 ? void 0 : _websocketRef$current.readyState\n      });\n    }\n  }, [selectedCase, websocketRef.current]); // Dependencies: selectedCase and websocketRef.current\n\n  console.log('App rendering with selectedCase:', selectedCase, 'and websocketRef.current:', websocketRef.current);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hand Gesture Recognition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: /*#__PURE__*/_jsxDEV(WebcamFeed, {\n          websocket: websocketRef.current,\n          selectedCase: selectedCase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Gesture Case\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCaseSelect(1),\n            className: selectedCase === 1 ? 'active' : '' // Add active class\n            ,\n            disabled: selectedCase === 1,\n            children: \"Case 1 (Photo Capture)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCaseSelect(2),\n            className: selectedCase === 2 ? 'active' : '' // Add active class\n            ,\n            disabled: selectedCase === 2,\n            children: \"Case 2 (YouTube Control)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCaseSelect(3),\n            className: selectedCase === 3 ? 'active' : '' // Add active class\n            ,\n            disabled: selectedCase === 3,\n            children: \"Case 3 (PowerPoint Control)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Gesture Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: gestureResult || 'Awaiting gesture...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Yxw50wpdpvJM9SSkRLFi+CIA5kw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","WebcamFeed","jsxDEV","_jsxDEV","App","_s","selectedCase","setSelectedCase","gestureResult","setGestureResult","websocketRef","handleCaseSelect","caseNumber","console","log","wsUrl","ws","WebSocket","onopen","current","send","JSON","stringify","case","onmessage","event","data","parse","gesture","e","error","onerror","onclose","close","readyState","OPEN","_websocketRef$current","websocketReadyState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","websocket","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/nmit original/gesture-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport WebcamFeed from './WebcamFeed'; // Import the WebcamFeed component\n\nfunction App() {\n  const [selectedCase, setSelectedCase] = useState(null);\n  const [gestureResult, setGestureResult] = useState('');\n  const websocketRef = useRef(null);\n\n  // Function to handle case selection\n  const handleCaseSelect = (caseNumber) => {\n    console.log(`Case selected: ${caseNumber}`);\n    setSelectedCase(caseNumber);\n    setGestureResult(''); // Clear previous result when case changes\n    // The sending logic will now be handled by the useEffect below\n  };\n\n  // Effect to manage WebSocket connection (runs once on mount)\n  useEffect(() => {\n    console.log('Attempting to connect WebSocket...');\n    // Replace with your backend WebSocket URL\n    const wsUrl = 'ws://localhost:5000/gesture_stream';\n    const ws = new WebSocket(wsUrl);\n\n    ws.onopen = () => {\n      console.log('WebSocket connection opened');\n      websocketRef.current = ws;\n      // Now that the WebSocket is open, if a case was already selected, send it.\n      // This handles the case where a button was clicked before the connection opened.\n      if (selectedCase !== null) {\n         console.log(`WebSocket opened, sending initial selected case ${selectedCase}`);\n         ws.send(JSON.stringify({ case: selectedCase }));\n      }\n    };\n\n    ws.onmessage = (event) => {\n      console.log(\"Received message:\", event.data);\n      // Assuming the backend sends JSON with a 'frame' and potentially 'gesture'\n      try {\n        const data = JSON.parse(event.data);\n        // The WebcamFeed component handles the frame.\n        // We only update gestureResult if the backend sends a specific gesture message.\n        if (data.gesture) {\n           setGestureResult(data.gesture);\n        } else if (typeof data === 'string') {\n           // Fallback for simple string messages\n           setGestureResult(data);\n        }\n      } catch (e) {\n        console.error(\"Failed to parse WebSocket message:\", e);\n        // Handle non-JSON messages or errors\n        setGestureResult(`Received: ${event.data}`);\n      }\n    };\n\n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n      setGestureResult('WebSocket Error');\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n      websocketRef.current = null;\n      setGestureResult('WebSocket Closed');\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      console.log('Cleaning up WebSocket connection...');\n      if (websocketRef.current) {\n        websocketRef.current.close();\n      }\n    };\n  }, []); // Empty dependency array: runs only on mount and unmount\n\n  // Effect to send selectedCase when it changes AND WebSocket is open\n  useEffect(() => {\n    console.log('selectedCase or websocketRef.current changed.');\n    if (selectedCase !== null && websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\n      console.log(`Sending selected case ${selectedCase} via WebSocket.`);\n      websocketRef.current.send(JSON.stringify({ case: selectedCase }));\n    } else {\n      console.log('Conditions not met to send case:', { selectedCase, websocketReadyState: websocketRef.current?.readyState });\n    }\n  }, [selectedCase, websocketRef.current]); // Dependencies: selectedCase and websocketRef.current\n\n  console.log('App rendering with selectedCase:', selectedCase, 'and websocketRef.current:', websocketRef.current);\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Hand Gesture Recognition</h1>\n      </header>\n      <main>\n        <div className=\"video-container\">\n          {/* Render the WebcamFeed component */}\n          <WebcamFeed websocket={websocketRef.current} selectedCase={selectedCase} />\n        </div>\n\n        <div className=\"controls\">\n          <h2>Select Gesture Case</h2>\n           <div>\n             <button\n               onClick={() => handleCaseSelect(1)}\n               className={selectedCase === 1 ? 'active' : ''} // Add active class\n               disabled={selectedCase === 1}\n             >\n               Case 1 (Photo Capture)\n             </button>\n             <button\n               onClick={() => handleCaseSelect(2)}\n               className={selectedCase === 2 ? 'active' : ''} // Add active class\n               disabled={selectedCase === 2}\n             >\n               Case 2 (YouTube Control)\n             </button>\n             <button\n               onClick={() => handleCaseSelect(3)}\n               className={selectedCase === 3 ? 'active' : ''} // Add active class\n               disabled={selectedCase === 3}\n             >\n               Case 3 (PowerPoint Control)\n             </button>\n           </div>\n        </div>\n\n        <div className=\"results\">\n          <h2>Gesture Result</h2>\n          <p>{gestureResult || 'Awaiting gesture...'}</p>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMY,YAAY,GAAGV,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACA,MAAMW,gBAAgB,GAAIC,UAAU,IAAK;IACvCC,OAAO,CAACC,GAAG,CAAC,kBAAkBF,UAAU,EAAE,CAAC;IAC3CL,eAAe,CAACK,UAAU,CAAC;IAC3BH,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB;EACF,CAAC;;EAED;EACAV,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACjD;IACA,MAAMC,KAAK,GAAG,oCAAoC;IAClD,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAACF,KAAK,CAAC;IAE/BC,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBL,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CJ,YAAY,CAACS,OAAO,GAAGH,EAAE;MACzB;MACA;MACA,IAAIV,YAAY,KAAK,IAAI,EAAE;QACxBO,OAAO,CAACC,GAAG,CAAC,mDAAmDR,YAAY,EAAE,CAAC;QAC9EU,EAAE,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEjB;QAAa,CAAC,CAAC,CAAC;MAClD;IACF,CAAC;IAEDU,EAAE,CAACQ,SAAS,GAAIC,KAAK,IAAK;MACxBZ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEW,KAAK,CAACC,IAAI,CAAC;MAC5C;MACA,IAAI;QACF,MAAMA,IAAI,GAAGL,IAAI,CAACM,KAAK,CAACF,KAAK,CAACC,IAAI,CAAC;QACnC;QACA;QACA,IAAIA,IAAI,CAACE,OAAO,EAAE;UACfnB,gBAAgB,CAACiB,IAAI,CAACE,OAAO,CAAC;QACjC,CAAC,MAAM,IAAI,OAAOF,IAAI,KAAK,QAAQ,EAAE;UAClC;UACAjB,gBAAgB,CAACiB,IAAI,CAAC;QACzB;MACF,CAAC,CAAC,OAAOG,CAAC,EAAE;QACVhB,OAAO,CAACiB,KAAK,CAAC,oCAAoC,EAAED,CAAC,CAAC;QACtD;QACApB,gBAAgB,CAAC,aAAagB,KAAK,CAACC,IAAI,EAAE,CAAC;MAC7C;IACF,CAAC;IAEDV,EAAE,CAACe,OAAO,GAAID,KAAK,IAAK;MACtBjB,OAAO,CAACiB,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxCrB,gBAAgB,CAAC,iBAAiB,CAAC;IACrC,CAAC;IAEDO,EAAE,CAACgB,OAAO,GAAG,MAAM;MACjBnB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CJ,YAAY,CAACS,OAAO,GAAG,IAAI;MAC3BV,gBAAgB,CAAC,kBAAkB,CAAC;IACtC,CAAC;;IAED;IACA,OAAO,MAAM;MACXI,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClD,IAAIJ,YAAY,CAACS,OAAO,EAAE;QACxBT,YAAY,CAACS,OAAO,CAACc,KAAK,CAAC,CAAC;MAC9B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACAlC,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;IAC5D,IAAIR,YAAY,KAAK,IAAI,IAAII,YAAY,CAACS,OAAO,IAAIT,YAAY,CAACS,OAAO,CAACe,UAAU,KAAKjB,SAAS,CAACkB,IAAI,EAAE;MACvGtB,OAAO,CAACC,GAAG,CAAC,yBAAyBR,YAAY,iBAAiB,CAAC;MACnEI,YAAY,CAACS,OAAO,CAACC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEjB;MAAa,CAAC,CAAC,CAAC;IACnE,CAAC,MAAM;MAAA,IAAA8B,qBAAA;MACLvB,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE;QAAER,YAAY;QAAE+B,mBAAmB,GAAAD,qBAAA,GAAE1B,YAAY,CAACS,OAAO,cAAAiB,qBAAA,uBAApBA,qBAAA,CAAsBF;MAAW,CAAC,CAAC;IAC1H;EACF,CAAC,EAAE,CAAC5B,YAAY,EAAEI,YAAY,CAACS,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE1CN,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAER,YAAY,EAAE,2BAA2B,EAAEI,YAAY,CAACS,OAAO,CAAC;EAGhH,oBACEhB,OAAA;IAAKmC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpC,OAAA;MAAQmC,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BpC,OAAA;QAAAoC,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACTxC,OAAA;MAAAoC,QAAA,gBACEpC,OAAA;QAAKmC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAE9BpC,OAAA,CAACF,UAAU;UAAC2C,SAAS,EAAElC,YAAY,CAACS,OAAQ;UAACb,YAAY,EAAEA;QAAa;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eAENxC,OAAA;QAAKmC,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBpC,OAAA;UAAAoC,QAAA,EAAI;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3BxC,OAAA;UAAAoC,QAAA,gBACEpC,OAAA;YACE0C,OAAO,EAAEA,CAAA,KAAMlC,gBAAgB,CAAC,CAAC,CAAE;YACnC2B,SAAS,EAAEhC,YAAY,KAAK,CAAC,GAAG,QAAQ,GAAG,EAAG,CAAC;YAAA;YAC/CwC,QAAQ,EAAExC,YAAY,KAAK,CAAE;YAAAiC,QAAA,EAC9B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTxC,OAAA;YACE0C,OAAO,EAAEA,CAAA,KAAMlC,gBAAgB,CAAC,CAAC,CAAE;YACnC2B,SAAS,EAAEhC,YAAY,KAAK,CAAC,GAAG,QAAQ,GAAG,EAAG,CAAC;YAAA;YAC/CwC,QAAQ,EAAExC,YAAY,KAAK,CAAE;YAAAiC,QAAA,EAC9B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTxC,OAAA;YACE0C,OAAO,EAAEA,CAAA,KAAMlC,gBAAgB,CAAC,CAAC,CAAE;YACnC2B,SAAS,EAAEhC,YAAY,KAAK,CAAC,GAAG,QAAQ,GAAG,EAAG,CAAC;YAAA;YAC/CwC,QAAQ,EAAExC,YAAY,KAAK,CAAE;YAAAiC,QAAA,EAC9B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAENxC,OAAA;QAAKmC,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBpC,OAAA;UAAAoC,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBxC,OAAA;UAAAoC,QAAA,EAAI/B,aAAa,IAAI;QAAqB;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACtC,EAAA,CAlIQD,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AAoIZ,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}